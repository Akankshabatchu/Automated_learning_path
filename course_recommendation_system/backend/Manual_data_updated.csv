Course_Name,Category,Subcategory,Description,Skills_Covered,Tags,Difficulty_Level
Computer Science 101: Master the Theory Behind Programming,Development,Computer Science,"This course provides a comprehensive introduction to core computer science concepts, covering topics like data structures, algorithms, and programming paradigms.","Algorithm analysis, data structures (arrays, linked lists, stacks, queues, trees), sorting algorithms, graph theory, hashing algorithms.","Computer Science, Programming Theory, Algorithms, Data Structures",Beginner
Foundations of Computer Science: Theory and Practice,Development,Computer Science,Learn the fundamental topics of computer science and practice them for full mastery.,"Algorithm design, data structures, computational theory, problem-solving.","Computer Science, Theory, Practice, Algorithms",Beginner
The Complete Theory of Computation,Development,Computer Science,This course is designed to give you the theory of computation knowledge and skills you need to become an advanced developer.,"Automata theory, formal languages, Turing machines, decidability, complexity theory.","Theory of Computation, Automata, Turing Machines, Complexity",Intermediate
Theory of Automata and Computation,Development,Computer Science,"This is the most compendious and extensive, yet very straightforward course on the theory of automata and computation.","Automata theory, formal languages, grammar, Turing machines, computational theory.","Automata, Computation, Formal Languages, Turing Machines",Intermediate
Operating Systems from Scratch - Part 1,IT & Software,Operating Systems,Learn the concepts of operating systems from scratch as operating system forms the core of computer science.,"Process management, memory management, file systems, input/output systems, operating system principles.","Operating Systems, Process Management, Memory Management, File Systems",Intermediate
Data Structures & Algorithms Essentials using C++ (2023),Development,Programming Languages,A comprehensive course covering essential data structures and algorithms using C++.,"Arrays, linked lists, stacks, queues, trees, sorting algorithms, graph algorithms, dynamic programming.","Data Structures, Algorithms, C++, Programming",Intermediate
Discrete Mathematics,Development,Computer Science,A foundational course covering a wide range of topics essential for computer science.,"Set theory, logic, number theory, proofs, functions, relations, graph theory, combinatorics.","Discrete Mathematics, Logic, Graph Theory, Combinatorics",Intermediate
Graph Theory Algorithms,Development,Computer Science,Explore the fundamentals of graph theory and its applications.,"Graph representations, search algorithms (DFS, BFS), tree algorithms, shortest path algorithms, network flow.","Graph Theory, Algorithms, Network Flow, Search Algorithms",Intermediate
Computer Science 101 - Computers & Programming for Beginners,Development,Computer Science,An introductory course covering the basics of computers and programming for beginners.,"Algorithms, programming fundamentals, variables, loops, conditional statements, object-oriented programming.","Computer Science, Programming Theory, Algorithms, Data Structures",Beginner
Computational Thinking for Problem Solving,Development,Computer Science,Learn to think computationally and solve real-world problems using a structured approach.,"Problem-solving techniques, abstraction, pattern recognition, algorithms, computational models.","Computational Thinking, Problem Solving, Algorithms, Programming Fundamentals.",Intermediate
Introduction to Information Theory,Development,Computer Science,"Learn the principles of information theory, entropy, coding theory, and data compression.","Entropy, Shannon’s theorem, Huffman coding, lossless/lossy compression, error correction.","Information Theory, Entropy, Data Compression, Coding Theory.",Beginner
Mathematical Foundations of Computer Science,Development,Computer Science,Covers essential mathematical concepts required for theoretical and applied computer science.,"Logic, proof techniques, set theory, combinatorics, probability, graph theory.","Mathematics, Logic, Proof Techniques, Graph Theory.",Beginner
Introduction to Cryptography,IT & Software,Security,"Learn the fundamentals of cryptographic techniques, encryption methods, and security principles.","Symmetric/asymmetric encryption, hashing, RSA, digital signatures, cryptographic protocols.","Cryptography, Encryption, Cybersecurity, Hashing, Security Protocols.",Beginner
Functional Programming Principles in Scala,Development,Programming Languages,Understand the fundamentals of functional programming and how they apply to real-world scenarios.,"Lambda calculus, higher-order functions, recursion, immutability, monads.","Functional Programming, Scala, Lambda Calculus, Higher-Order Functions.",Intermediate
Introduction to Quantum Computing and Quantum Algorithms,Development,Computer Science,A beginner’s guide to the principles of quantum computing and key quantum algorithms.,"Quantum mechanics basics, qubits, quantum gates, Shor’s algorithm, Grover’s search.","Quantum Computing, Qubits, Quantum Algorithms, Superposition, Entanglement.",Beginner
Discrete Mathematics for Computer Science,Development,Computer Science,"Learn essential discrete math concepts required in computer science, including set theory, logic, combinatorics, and graph theory.","Set theory, logic, relations, combinatorics, graph theory, proof techniques.","Discrete Mathematics, Logic, Set Theory, Proof Techniques, Graph Theory.",Intermediate
"Master Discrete Mathematics: Set Theory, Relations, Functions",Development,Computer Science,"Covers fundamental discrete mathematics topics, focusing on sets, relations, and functions with real-world applications.","Set operations, types of relations, functions, equivalence relations, partial orderings.","Set Theory, Relations, Functions, Discrete Structures.",Intermediate
Graph Theory for Beginners,Development,Computer Science,"A comprehensive introduction to graph theory, covering paths, cycles, trees, and applications in computer science.","Graph representation, adjacency matrices, shortest paths, Euler circuits, Hamiltonian paths.","Graph Theory, Graph Algorithms, Trees, Euler Circuits.",Beginner
Logic and Proof Techniques in Discrete Mathematics,Development,Computer Science,"Learn logic, proof strategies, and mathematical reasoning, essential for theoretical computer science.","Propositional logic, predicate logic, direct and indirect proofs, mathematical induction.","Logic, Proof Techniques, Induction, Discrete Structures.",Intermediate
Combinatorics and Probability in Discrete Mathematics,Development,Computer Science,"Covers permutations, combinations, binomial theorem, probability, and their applications in computer science.","Counting principles, probability theory, binomial coefficients, Pascal’s triangle, inclusion-exclusion principle.","Combinatorics, Probability, Counting, Binomial Theorem.",Intermediate
Boolean Algebra and Digital Logic,IT & Software,Hardware,"Understand Boolean algebra, logic gates, and circuit design for digital computing.","Boolean expressions, Karnaugh maps, logic simplification, combinational and sequential circuits.","Boolean Algebra, Logic Gates, Digital Circuits, Karnaugh Maps.",Intermediate
Introduction to Number Theory for Cryptography,IT & Software,Security,"Learn number theory concepts used in cryptography, including modular arithmetic, prime numbers, and RSA encryption","Prime numbers, modular arithmetic, Fermat’s theorem, RSA encryption, discrete logarithm problem.","Number Theory, Modular Arithmetic, Cryptography, RSA Algorithm.",Beginner
Mathematical Induction and Recurrence Relations,Development,Computer Science,"Master mathematical induction and recurrence relations, which are widely used in algorithm analysis.","Inductive proofs, strong induction, recurrence relations, closed-form solutions.","Induction, Recurrence Relations, Algorithm Analysis.",Intermediate
Automata Theory and Formal Languages,Development,Computer Science,"Learn about finite automata, regular languages, context-free grammars, and Turing machines.","DFA, NFA, regular expressions, CFGs, pushdown automata, Turing machines.","Automata Theory, Formal Languages, Turing Machines, Regular Expressions.",Intermediate
Linear Algebra for Computer Science,Development,Computer Science,Understand the importance of linear algebra in computer science applications like machine learning and graphics.,"Matrices, vectors, eigenvalues, eigenvectors, transformations.","Linear Algebra, Matrices, Vectors, Eigenvalues.",Intermediate
Set Theory and Cardinality,Development,Computer Science,"Learn about set theory fundamentals, countable vs uncountable sets, and cardinality concepts.","Set notation, Cartesian products, cardinality, countable/uncountable sets, Cantor’s theorem.","Set Theory, Cardinality, Cantor’s Theorem, Discrete Structures.",Intermediate
Discrete Math for Computer Science Interviews,Development,Career Development,Master discrete math concepts frequently tested in technical interviews.,"Logical reasoning, proof strategies, combinatorics, recursion, graph theory.","Discrete Mathematics, Interviews, Logical Reasoning, Graphs.",Intermediate
Introduction to Lattices and Boolean Algebra,Development,Computer Science,"Learn about partially ordered sets, lattices, and Boolean algebra for theoretical computer science.","Lattices, Boolean algebra, distributive laws, De Morgan’s laws, logic functions.","Lattices, Boolean Algebra, Logic, Discrete Mathematics.",Beginner
Recursion and Generating Functions in Discrete Math,Development,Computer Science,"Covers recursive sequences, recurrence relations, and generating functions used in algorithm analysis.","Recursion, recurrence relations, generating functions, combinatorial counting.","Recursion, Generating Functions, Counting, Recurrence Relations.",Intermediate
Computational Thinking for Beginners,Development,Computer Science,Learn how to break down complex problems and think logically to solve real-world challenges using computational thinking.,"Decomposition, pattern recognition, abstraction, algorithms, logical reasoning.","Computational Thinking, Problem-Solving, Logical Reasoning, Algorithms.",Beginner
Mastering Computational Thinking for Problem-Solving,Development,Computer Science,Develop problem-solving skills using computational thinking principles applicable in programming and real-world scenarios.,"Algorithm design, abstraction, logical thinking, debugging techniques.","Computational Thinking, Problem-Solving, Algorithm Design, Debugging.",Intermediate
Computational Thinking and Python Programming,Development,Programming Languages,Learn computational thinking and apply it using Python programming to build effective algorithms.,"Algorithmic thinking, Python programming, recursion, data representation.","Python, Computational Thinking, Algorithms, Programming.",Beginner
Introduction to Algorithmic Thinking,Development,Computer Science,Learn the fundamental concepts of algorithmic problem-solving and computational thinking.,"Flowcharts, pseudo-code, pattern recognition, debugging strategies.","Algorithmic Thinking, Flowcharts, Computational Thinking, Logical Reasoning.",Beginner
Computational Thinking for Artificial Intelligence,Development,AI & Machine Learning,Understand computational thinking concepts in AI and machine learning applications.,"Pattern recognition, heuristics, problem-solving, AI algorithms.","AI, Machine Learning, Computational Thinking, Heuristics.",Intermediate
Problem-Solving Strategies with Computational Thinking,Development,Software Engineering,Develop structured thinking for solving problems in programming and real-life scenarios.,"Logical reasoning, algorithm design, decomposition, abstraction.","Computational Thinking, Problem-Solving, Logical Reasoning, Algorithms.",Intermediate
Logical Reasoning and Computational Thinking,Development,Computer Science,"Enhance logical reasoning skills for programming, mathematics, and problem-solving.","Logic, deduction, inductive reasoning, computational models.","Logical Thinking, Deduction, Computational Thinking, Problem-Solving.",Intermediate
Computational Thinking for Data Science,Development,Data Science,Learn how computational thinking applies to data analysis and problem-solving in data science.,"Data abstraction, pattern recognition, algorithmic thinking, data wrangling.","Data Science, Computational Thinking, Data Analysis, Pattern Recognition.",Intermediate
Developing a Problem-Solving Mindset with Computational Thinking,Development,Personal Development,Train your mind to think critically and solve problems efficiently using computational thinking techniques.,"Critical thinking, pattern analysis, logic building, algorithm design.","Computational Thinking, Problem-Solving, Logical Thinking, Critical Thinking.",Intermediate
Computational Thinking for Kids and Beginners,Teaching & Academics,STEM Education,A beginner-friendly course to teach young learners how to think computationally and solve problems.,"Logical thinking, basic coding, pattern recognition, problem-solving.","Kids Coding, Computational Thinking, Logical Reasoning, STEM Learning.",Beginner
From Computational Thinking to Coding,Development,Programming Languages,A step-by-step approach to transitioning from computational thinking concepts to actual coding in programming languages.,"Decomposition, algorithms, flowcharts, programming basics.","Computational Thinking, Coding, Algorithm Design, Programming Logic.",Intermediate
Computational Thinking for Game Development,Development,Game Development,Learn how to apply computational thinking in game design and development.,"AI behavior, game logic, event-driven programming, problem-solving.","Game Development, Computational Thinking, AI, Game Logic.",Intermediate
Algorithmic and Computational Thinking for Competitive Programming,Development,Software Engineering,Develop computational thinking strategies used in competitive programming and coding challenges.,"Algorithm optimization, recursion, dynamic programming, complexity analysis.","Competitive Programming, Computational Thinking, Algorithms, Problem-Solving.",Intermediate
Computational Thinking for Business and Decision Making,Business,Data & Analytics,Use computational thinking to make data-driven decisions and solve business problems efficiently.,"Decision modeling, pattern analysis, data-driven strategies, problem-solving.","Business, Decision Making, Computational Thinking, Data Analysis.",Intermediate
Creative Problem-Solving with Computational Thinking,Development,Creativity & Innovation,Learn to apply computational thinking creatively to solve complex problems in different domains.,"Divergent thinking, abstraction, logical deduction, problem decomposition.","Creativity, Problem-Solving, Computational Thinking, Logical Deduction.",Intermediate
The Complete C Programming Course for Beginners,Development,Programming Languages,"Learn the fundamentals of C programming from scratch, including data types, loops, functions, and pointers.","Variables, loops, functions, pointers, memory management, file handling.","C Programming, Pointers, Memory Management, Functions, C Basics.",Beginner
Master C++: From Beginner to Advanced,Development,Programming Languages,"A comprehensive C++ course covering OOP concepts, data structures, STL, and memory management.","Object-oriented programming, pointers, dynamic memory allocation, STL.","C++, Object-Oriented Programming, STL, Pointers, Memory Management.",Beginner
Java Programming for Complete Beginners,Development,Programming Languages,"Learn Java from scratch, including syntax, OOP concepts, and Java Collections Framework.","OOP, exception handling, multi-threading, collections, Java basics.","Java, Object-Oriented Programming, Java Collections, Multi-threading, Java Basics.",Beginner
Python for Absolute Beginners,Development,Programming Languages,"A beginner-friendly course covering Python basics, data types, loops, and file handling.","Python syntax, loops, functions, file handling, exception handling.","Python, Loops, Functions, File Handling, Beginner Python.",Beginner
JavaScript Essentials for Beginners,Development,Web Development,"Learn JavaScript basics, DOM manipulation, and event handling for web development.","JavaScript syntax, DOM manipulation, event handling, ES6 features.","JavaScript, ES6, DOM, Event Handling, Web Development.",Beginner
C# for Beginners: Learn to Code with C#,Development,Game Development,Master C# programming from basics to advanced topics like OOP and LINQ.,"C# syntax, OOP, exception handling, LINQ, .NET framework.","C#, OOP, .NET, LINQ, C# Programming.",Beginner
Kotlin for Android Development,Development,Mobile Development,Learn Kotlin and use it to develop Android apps with Jetpack Compose.,"Kotlin syntax, Android Studio, Jetpack Compose, MVVM architecture.","Kotlin, Android, Jetpack Compose, Mobile Development, MVVM.",Intermediate
PHP & MySQL: Web Development from Scratch,Development,Web Development,Build dynamic websites using PHP and MySQL database.,"PHP syntax, database connectivity, CRUD operations, sessions.","PHP, MySQL, Web Development, Backend Development, CRUD.",Intermediate
R Programming for Data Science,Data Science,Programming Languages,Learn R programming for statistical analysis and data visualization.,"R syntax, data visualization, statistical analysis, machine learning.","R Programming, Data Science, Data Analysis, Visualization, R Basics.",Intermediate
Shell Scripting for DevOps,IT & Software,DevOps,Master shell scripting for automation and DevOps workflows.,"Bash scripting, process automation, Linux commands, scripting best practices.","Shell Scripting, DevOps, Bash, Automation, Linux Commands.",Intermediate
Software Development Life Cycle (SDLC) - A Complete Guide,Development,Software Engineering,"Learn the fundamentals of SDLC, including waterfall, agile, and DevOps models, and best practices for software development.","SDLC phases, software requirements, design, development, testing, deployment, and maintenance.","SDLC, Software Engineering, Agile, Waterfall, Software Development.",Intermediate
Agile Software Development: Scrum & Kanban Explained,IT & Software,Project Management,"Learn how to implement Agile methodologies, including Scrum and Kanban, in software development.","Agile principles, Scrum framework, Kanban boards, sprint planning, backlog grooming.","Agile, Scrum, Kanban, Software Development, Project Management.",Intermediate
Software Engineering 101: Understanding SDLC Models,Development,Software Engineering,"A beginner’s guide to different SDLC models, including waterfall, iterative, V-model, spiral, and agile.","SDLC models, software process improvement, requirement analysis, software quality.","SDLC, Software Engineering, Development Models, Agile, Waterfall.",Beginner
Software Testing & Quality Assurance (QA) Fundamentals,IT & Software,Software Testing,Learn the importance of testing in SDLC and explore different testing methodologies.,"Unit testing, integration testing, system testing, UAT, automated testing tools.","Software Testing, QA, Test Automation, SDLC Testing, Bug Tracking.",Intermediate
DevOps Essentials: Understanding CI/CD and SDLC Integration,IT & Software,DevOps,"Learn how DevOps integrates into SDLC with CI/CD pipelines, automation, and infrastructure as code.","CI/CD, Jenkins, Git, Docker, Kubernetes, deployment automation.","DevOps, CI/CD, Software Development, SDLC Automation, Continuous Integration.",Intermediate
Software Requirements Engineering & Documentation,Development,Software Engineering,Learn how to gather and document software requirements effectively for better SDLC management.,"Requirements gathering, use case modeling, UML diagrams, functional vs. non-functional requirements.","Software Requirements, Business Analysis, SDLC, Use Cases, Documentation.",Intermediate
Agile Scrum Master Certification Prep,Business,Project Management,Prepare for Scrum Master certification with a deep dive into Agile and Scrum methodologies.,"Scrum framework, sprint planning, Agile ceremonies, backlog management.","Scrum, Agile, SDLC, Project Management, Certification.",Intermediate
Introduction to Software Architecture & Design Patterns,Development,Software Engineering,"Learn software architecture principles, including layered architecture, microservices, and design patterns.","MVC, microservices, monolithic vs. distributed systems, SOLID principles.","Software Architecture, Design Patterns, Microservices, System Design, SDLC.",Beginner
Waterfall vs. Agile: Choosing the Right SDLC Model,Development,Software Engineering,Understand the key differences between Waterfall and Agile methodologies and when to use each.,"SDLC comparison, project management, risk analysis, iterative development.","Waterfall, Agile, SDLC, Iterative Development, Software Lifecycle.",Intermediate
Secure Software Development Life Cycle (SSDLC),IT & Software,Cybersecurity,Learn how to integrate security best practices into SDLC to prevent vulnerabilities.,"Secure coding, threat modeling, OWASP Top 10, penetration testing.","Cybersecurity, Secure SDLC, Threat Modeling, Secure Coding, Penetration Testing.",Intermediate
Software Project Management with SDLC,Business,Project Management,Learn project management best practices using SDLC methodologies.,"Project planning, risk assessment, software cost estimation, stakeholder communication.","SDLC, Project Management, Risk Assessment, Software Planning, Agile.",Intermediate
Microservices Development and SDLC Best Practices,Development,Software Engineering,Understand SDLC best practices for building scalable microservices applications.,"Microservices architecture, REST APIs, API gateways, service discovery.","Microservices, API Development, SDLC, Software Design, Kubernetes.",Intermediate
Business Analyst Guide to Software Development Life Cycle,Business,Business Analysis,Learn how business analysts contribute to SDLC through requirement analysis and stakeholder management.,"Process modeling, user stories, stakeholder communication, requirement documentation.","Business Analysis, SDLC, Requirement Gathering, UML, Process Modeling.",Intermediate
Mastering Object-Oriented Programming in Java,Development,Programming Languages,"Learn OOP principles using Java, covering encapsulation, inheritance, polymorphism, and abstraction.","OOP concepts, Java syntax, design patterns, Java classes and objects.","Java, OOP, Object-Oriented Programming, Java Classes, Inheritance.",Intermediate
Object-Oriented Programming (OOP) for Beginners in Python,Development,Programming Languages,"Learn how to write clean, reusable, and efficient code using Python's OOP features.","Python classes, constructors, inheritance, polymorphism, magic methods.","Python, OOP, Object-Oriented, Classes, Inheritance.",Beginner
C++ Object-Oriented Programming and STL,Development,Programming Languages,Learn OOP in C++ along with the Standard Template Library (STL) for efficient coding.,"C++ classes, constructors, destructors, function overloading, STL containers.","C++, OOP, STL, Object-Oriented, Polymorphism.",Intermediate
Design Patterns and Object-Oriented Programming in C#,Development,Software Development,Master OOP principles in C# and learn how to implement design patterns effectively.,"C# OOP, interfaces, dependency injection, SOLID principles, design patterns.","C#, OOP, Design Patterns, SOLID, Object-Oriented.",Intermediate
Object-Oriented Programming with JavaScript (ES6+),Development,Web Development,Learn how to apply OOP principles in JavaScript using ES6+ features.,"JavaScript classes, prototypes, closures, encapsulation, inheritance.","JavaScript, OOP, Object-Oriented, Classes, Prototypes.",Intermediate
UML & Object-Oriented Design Foundations,Development,Software Engineering,Learn how to design software systems using UML and OOP principles.,"UML diagrams, class relationships, software architecture, design principles.","UML, OOP, Software Design, Object-Oriented, Class Diagrams.",Beginner
Object-Oriented Programming and Data Structures in Python,Development,Data Science,Learn how to implement OOP with data structures in Python.,"Python OOP, linked lists, stacks, queues, trees, recursion.","Python, OOP, Data Structures, Object-Oriented, Algorithms.",Intermediate
SOLID Principles and Object-Oriented Design Patterns,Development,Software Engineering,Learn the five SOLID principles of OOP and how to apply them to real-world projects.,"SOLID principles, dependency injection, design patterns, clean code.","SOLID, OOP, Object-Oriented, Design Patterns, Clean Code.",Intermediate
Python OOP: Build Real-World Applications,Development,Software Development,Learn OOP in Python by building real-world applications like a banking system.,"Python OOP, project-based learning, MVC architecture, unit testing.","Python, OOP, Object-Oriented, Real-World Applications, Project-Based Learning.",Beginner
OOP Principles and Java Web Development,Development,Web Development,Learn how OOP principles are applied in Java web applications using Spring Boot.,"Java OOP, Spring Boot, MVC, REST APIs.","Java, OOP, Object-Oriented, Spring Boot, Web Development.",Intermediate
Object-Oriented Analysis & Design for Software Engineers,Development,Software Engineering,"Learn OOP-based software development, from requirements to implementation.","OOP analysis, design patterns, software architecture, UML modeling.","OOP, Software Engineering, UML, Object-Oriented, Design Patterns.",Intermediate
Functional Programming in JavaScript – Master the Concepts,Development,Web Development,"Learn how to write pure functions, use higher-order functions, and apply functional programming techniques in JavaScript.","JavaScript functional programming, pure functions, higher-order functions, currying, immutability.","JavaScript, Functional Programming, Higher-Order Functions, ES6, Pure Functions.",Intermediate
Functional Programming in Python – From Beginner to Expert,Development,Programming Languages,"Learn how to leverage Python’s functional programming capabilities to write cleaner, more efficient code.","Lambda functions, list comprehensions, map/filter/reduce, decorators, immutability.","Python, Functional Programming, Lambda, Map-Reduce, Decorators.",Beginner
Functional Programming in Java 8+,Development,Programming Languages,"Learn functional programming in Java using Java 8+ features like Streams, Lambda expressions, and Optional.","Java Streams API, lambda expressions, functional interfaces, method references.","Java, Functional Programming, Streams API, Lambdas, Java 8+.",Intermediate
Mastering Functional Programming with Kotlin,Development,Mobile Development,"Learn Kotlin’s functional programming features, including lambda expressions, higher-order functions, and coroutines.","Kotlin lambdas, extension functions, coroutines, functional collections.","Kotlin, Functional Programming, Coroutines, Higher-Order Functions, Extension Functions.",Intermediate
Functional Data Structures and Algorithms,Development,Data Structures & Algorithms,Learn how to implement data structures and algorithms in a functional programming paradigm.,"Immutable data structures, recursion, functional graphs, pattern matching.","Functional Programming, Data Structures, Algorithms, Immutable Structures, Recursion.",Intermediate
Compiler Design: Introduction to Compiler Theory,Development,Computer Science Theory,"Learn the fundamental concepts of compiler design, including lexical analysis, parsing, and code generation.","Lexical analysis, parsing, syntax trees, code generation, compiler phases.","Compiler Design, Parsing, Syntax Analysis, Code Generation, Computer Science.",Beginner
Lexical Analysis & Tokenization for Compiler Design,Development,Computer Science Theory,Learn how lexical analysis works and how to implement tokenization in a compiler.,"Finite state machines, regular expressions, tokenization, symbol tables.","Compiler, Lexical Analysis, Tokenization, Finite State Machines, Regular Expressions.",Intermediate
Code Optimization Techniques in Compiler Design,Development,Computer Science Theory,"Learn advanced techniques for optimizing code in a compiler, including constant folding and dead code elimination.","Constant folding, loop unrolling, strength reduction, dead code elimination.","Compiler Optimization, Code Optimization, Constant Folding, Dead Code Elimination, Strength Reduction.",Intermediate
Understanding Context-Free Grammars in Compiler Design,Development,Computer Science Theory,Learn about context-free grammars (CFGs) and their role in syntax analysis in compilers.,"Context-free grammars, syntax trees, parsing techniques.","Compiler, CFG, Syntax Analysis, Parsing, Formal Languages.",Intermediate
Garbage Collection & Memory Management in Compilers,Development,Computer Science Theory,"Learn how memory management works in compilers, including garbage collection algorithms.","Reference counting, mark-and-sweep, generational garbage collection.","Compiler, Memory Management, Garbage Collection, Reference Counting, Mark-and-Sweep.",Intermediate
Mastering Data Structures & Algorithms in C and C++,Development,Data Structures & Algorithms,"A deep dive into data structures such as arrays, linked lists, stacks, queues, graphs, and trees using C and C++.","Arrays, linked lists, stacks, queues, trees, graphs, recursion, searching & sorting.","Data Structures, C++, C, Algorithms, DSA.",Intermediate
"Python Data Structures: Linked Lists, Stacks & Queues",Development,Data Science,"Implement linked lists, stacks, and queues in Python with hands-on exercises and real-world applications.","Python programming, linked lists, stack operations, queue implementations.","Python, Data Structures, Linked Lists, Stacks, Queues.",Intermediate
"Mastering Trees: Binary, AVL, B-Trees & More",Development,Data Structures & Algorithms,"Learn tree-based data structures such as binary trees, AVL trees, B-trees, and red-black trees.","Tree traversal, self-balancing trees, heap operations, tree-based searching.","Trees, AVL Tree, Binary Tree, Data Structures, Algorithms.",Intermediate
Stack and Queue Data Structures in JavaScript,Development,Web Development,Implement stack and queue data structures in JavaScript for front-end and back-end applications.,"Stack operations, queue operations, recursion, ES6 classes.","JavaScript, Stacks, Queues, Web Development, Algorithms.",Intermediate
"Java Collections Framework: Stacks, Queues & Trees",Development,Software Development,"Learn how to use Java’s built-in data structures like Stack, Queue, and TreeMap.","Java Collections, PriorityQueue, TreeMap, Deque.","Java, Collections, Data Structures, Trees, Stacks, Queues.",Intermediate
Arrays & Linked Lists: In-Depth Guide with Examples,Development,Data Structures & Algorithms,Get an in-depth understanding of arrays and linked lists with practical coding exercises.,"Array manipulation, pointer arithmetic, linked list traversal.","Arrays, Linked Lists, Data Structures, Algorithms.",Intermediate
"Competitive Programming: Graphs, Trees & Arrays",Development,Competitive Programming,Master key data structures used in competitive coding contests like Codeforces and LeetCode.,"Graph traversal, tree algorithms, segment trees, binary search.","Competitive Programming, Graphs, Trees, Arrays, LeetCode.",Intermediate
Sorting Algorithms: A Complete Guide,Development,Data Structures & Algorithms,"Learn sorting algorithms like QuickSort, MergeSort, HeapSort, BubbleSort, and more with hands-on examples.","Sorting techniques, time complexity analysis, recursion, divide & conquer.","Sorting, Algorithms, QuickSort, MergeSort, Data Structures.",Intermediate
"Bucket Sort, Counting Sort & Radix Sort: Non-Comparison Sorting",Development,Data Structures & Algorithms,"Explore non-comparison-based sorting techniques like Counting Sort, Radix Sort, and Bucket Sort.","Radix Sort, Bucket Sort, Counting Sort, optimization strategies.","Sorting, Radix Sort, Bucket Sort, Counting Sort, Algorithms.",Intermediate
Dynamic Programming for Coding Interviews & Competitive Programming,Development,Competitive Programming,"Master dynamic programming techniques for tackling real-world coding challenges on LeetCode, Codeforces, and other platforms.","DP pattern recognition, problem-solving, recursion, memoization.","Competitive Programming, DP, Coding Interviews, Algorithms, Problem Solving.",Intermediate
Java Dynamic Programming: Algorithms & Applications,Development,Java Programming,Implement dynamic programming solutions in Java with real-world examples and projects.,"Java algorithms, memoization, recursion, space optimization.","Java, Dynamic Programming, Memoization, Recursion, Algorithms.",Intermediate
Dynamic Programming for Graph Problems,Development,Graph Algorithms,"Solve graph-based DP problems, including shortest paths and network optimization.","Floyd-Warshall, Bellman-Ford, DAG shortest paths.","Graphs, DP, Shortest Paths, Network Optimization.",Intermediate
Big O Notation: Simplified for Coding Interviews,Development,Interview Preparation,A beginner-friendly guide to understanding and applying Big O notation for coding interviews.,"Algorithm efficiency, performance optimization, problem-solving.","Big O, Coding Interviews, Algorithm Analysis, Problem Solving.",Intermediate
Big O Notation in Python: Hands-On Guide,Development,Python Programming,Implement and analyze algorithms in Python using Big O notation with real-world examples.,"Algorithm efficiency, Python implementation, space/time trade-offs.","Python, Big O, Time Complexity, Algorithm Optimization.",Intermediate
Java Time Complexity & Algorithm Optimization,Development,Java Programming,"Learn time complexity concepts with Java implementations for sorting, searching, and recursion problems.","Java algorithms, performance tuning, recursion complexity.","Java, Time Complexity, Algorithm Optimization, Big O.",Intermediate
Graph Algorithms & Complexity Analysis,Development,Graph Theory,"Master graph algorithms like Dijkstra’s, Floyd-Warshall, and Bellman-Ford while analyzing their time complexity.","Graph traversal complexity, pathfinding efficiency, optimization techniques.","Graph Algorithms, Time Complexity, Shortest Paths, Optimization.",Intermediate
The Ultimate Big O Notation Course: 50+ Solved Problems,Development,Coding Challenges,Learn Big O notation with 50+ coding problems explained step by step.,"Algorithmic efficiency, space-time trade-offs, problem-solving.","Big O, Problem Solving, Coding Challenges, Optimization, Algorithms.",Intermediate
The Complete SQL Bootcamp 2024: Go from Zero to Hero,IT & Software,Databases,"Learn SQL from scratch with hands-on exercises in PostgreSQL. Covers queries, joins, indexes, and optimization.","SQL queries, joins, aggregate functions, subqueries, indexing, database design.","SQL, PostgreSQL, Data Analysis, Joins, Indexing, Queries.",Advanced
MySQL for Beginners: Learn MySQL from Scratch,IT & Software,Databases,"A beginner-friendly MySQL course covering database creation, table management, CRUD operations, and indexing.","MySQL setup, database management, normalization, indexing, stored procedures.","MySQL, Databases, SQL Queries, Data Management.",Beginner
Advanced SQL: Performance Optimization & Indexing,IT & Software,Database Optimization,"Learn how to optimize SQL queries, use indexing efficiently, and troubleshoot performance bottlenecks.","Indexing strategies, query execution plans, partitioning, indexing.","SQL Optimization, Indexing, Query Performance, MySQL.",Advanced
SQL for Data Science: Mastering Relational Databases,Data Science,Data Analytics,"Apply SQL in data analysis, master joins, window functions, and data manipulation techniques.","SQL queries, joins, aggregate functions, data transformation.","SQL, Data Science, Queries, Data Manipulation, PostgreSQL.",Intermediate
SQL & Relational Databases for Web Developers,Development,Web Development,Learn how to integrate SQL databases with web applications using MySQL and PostgreSQL.,"Database connectivity, SQL queries, PHP/MySQL integration.","Web Development, SQL, MySQL, PostgreSQL, Web Applications.",Intermediate
Database Security & SQL Injection Prevention,IT & Software,Cybersecurity,Learn best practices for securing SQL databases and preventing common vulnerabilities.,"SQL security, injection prevention, access control.","SQL Security, Cybersecurity, SQL Injection, Access Control.",Intermediate
NoSQL Databases: A Beginner's Guide,IT & Software,Databases,"Introduction to NoSQL databases like MongoDB, Firebase, and Cassandra, with practical applications.","NoSQL concepts, data modeling, indexing, scalability, CAP theorem.","NoSQL, Databases, MongoDB, Firebase, Cassandra.",Beginner
MongoDB Security Best Practices,IT & Software,Databases,"Learn how to secure MongoDB databases by implementing authentication, encryption, and access controls.","MongoDB security, authentication, SSL encryption, backup strategies.","MongoDB, Security, NoSQL, Cybersecurity, Encryption.",Intermediate
NoSQL vs. SQL: Choosing the Right Database,IT & Software,Database Technologies,"Compare NoSQL (MongoDB, Firebase, Cassandra) and SQL databases to understand when to use each.","SQL vs. NoSQL, scalability, indexing, schema design.","SQL, NoSQL, Databases, MySQL, MongoDB, Firebase, Cassandra.",Intermediate
The Complete Database Management System (DBMS) Course,IT & Software,Databases,"Learn the fundamentals of database management systems, including relational and NoSQL databases.","DBMS concepts, normalization, ER diagrams, SQL & NoSQL databases.","DBMS, SQL, NoSQL, Normalization, Database Design.",Intermediate
Fundamentals of Data Warehousing & Database Architecture,IT & Software,Data Science,"Learn data warehousing concepts, star schema, ETL, and big data integration.","Data modeling, ETL, star schema, indexing, OLAP.","Data Warehousing, OLAP, ETL, Star Schema, DBMS.",Intermediate
Database Normalization & ER Modeling Masterclass,IT & Software,Database Architecture,Learn how to design efficient databases using ER modeling and normalization techniques.,"Normalization (1NF to 5NF), ER modeling, data integrity, constraints.","Normalization, ER Modeling, DBMS, Data Integrity, Constraints.",Advanced
Data Warehousing for Beginners – A Complete Guide,IT & Software,Data Engineering,"Learn the fundamentals of data warehousing, including architecture, ETL, and schema design.","Data warehouse concepts, ETL process, star & snowflake schema, OLAP vs. OLTP.","Data Warehousing, ETL, Star Schema, Snowflake Schema, OLAP.",Beginner
Data Warehouse & ETL Testing Automation,IT & Software,Software Testing,Learn how to perform data warehouse and ETL testing using automation tools and SQL.,"Data validation, ETL testing, test automation, SQL for data warehouse testing.","ETL Testing, Data Validation, SQL, Data Quality, Automation.",Intermediate
Google BigQuery: Data Warehousing & Analytics,IT & Software,Cloud Databases,Learn how to use Google BigQuery for data warehousing and large-scale data analytics.,"Google BigQuery, SQL analytics, data ingestion, data lake integration.","Google BigQuery, Cloud Data Warehouse, SQL Analytics, Data Lakes, Data Processing.",Intermediate
Data Warehousing & Machine Learning Integration,Data Science,Machine Learning,Learn how to integrate machine learning with data warehouses for predictive analytics.,"Predictive analytics, AI-powered data processing, ML model deployment.","Data Warehousing, Machine Learning, AI, Predictive Analytics, Data Processing.",Intermediate
Memory Management in C and C++,Development,Programming Languages,"Learn how memory management works in C and C++, including stack vs. heap allocation, pointers, and garbage collection.","Dynamic memory allocation, malloc/free, new/delete, pointers, memory leaks.","C++, Memory Management, Heap, Stack, Dynamic Allocation.",Intermediate
Java Memory Management & Garbage Collection,Development,Java Programming,"Learn how Java manages memory using the heap, stack, and garbage collection techniques.","Java heap structure, JVM memory management, GC tuning, memory leaks.","Java, JVM, Garbage Collection, Memory Leaks, GC Tuning.",Intermediate
Web Browser Memory Management for JavaScript Developers,Development,Web Development,Learn how web browsers manage memory and how to prevent memory leaks in JavaScript applications.,"JavaScript memory model, closures, garbage collection, performance debugging.","JavaScript, Memory Management, Web Performance, Garbage Collection.",Intermediate
Linux for Beginners: The Complete Guide,IT & Software,Operating Systems,"A step-by-step introduction to Linux, covering installation, basic commands, and file management.","Command line basics, file system navigation, package management, user management.","Linux, CLI, Shell, Ubuntu, File System.",Beginner
Linux Administration Bootcamp: Go from Beginner to Advanced,IT & Software,System Administration,Learn the skills required to become a Linux system administrator.,"User management, file permissions, network configuration, system security.","Linux Admin, System Administration, User Management, Security.",Beginner
Linux Server Administration: A Practical Guide,IT & Software,System Administration,A hands-on guide to managing Linux servers in real-world scenarios.,"Server setup, remote access, SSH, firewall management.","Linux Server, SSH, Security, Firewall.",Intermediate
Linux Containers & Virtualization with Docker & Kubernetes,IT & Software,DevOps & Virtualization,Learn how to use Linux containers for application deployment.,"Docker, Kubernetes, LXC, container orchestration.","Linux Containers, Docker, Kubernetes, Virtualization.",Intermediate
TCP/IP Networking for Beginners - Basics to Advanced,IT & Software,Networking,"Learn the fundamentals of TCP/IP, network layers, and protocol interactions.","OSI model, IP addressing, subnetting, DNS, DHCP, packet analysis.","TCP/IP, OSI Model, Networking, IP Addressing, Subnetting.",Beginner
The Complete Networking Fundamentals Course,IT & Software,Networking,"Covers essential networking concepts, including TCP/IP, HTTP, and FTP.","Network layers, switching, routing, firewalls, network security.","Networking, Protocols, HTTP, FTP, Firewalls.",Intermediate
HTTP Basics: Understanding Web Communication,Development,Web Development,Learn how HTTP and HTTPS work in web communication.,"HTTP methods, status codes, headers, HTTPS security.","HTTP, Web Protocols, HTTPS, REST APIs, Security.",Beginner
FTP & File Transfer Protocols: A Practical Guide,IT & Software,Networking & Security,"Learn how FTP, SFTP, and FTPS work in secure file transfers.","FTP server setup, file transfer security, encryption methods.","FTP, SFTP, FTPS, File Transfer, Encryption.",Intermediate
Hands-on Network Automation with Python,IT & Software,DevOps & Networking,Automate networking tasks using Python and networking APIs.,"Network scripting, RESTful APIs, SSH automation, SNMP monitoring.","Network Automation, Python, DevOps, APIs, SNMP.",Intermediate
Cryptography & Encryption for Cybersecurity,IT & Software,Security,Understand encryption techniques used to secure data in cybersecurity.,"AES, RSA, hashing, digital signatures, cryptographic protocols.","Cryptography, Encryption, Cybersecurity, RSA, Hashing.",Intermediate
"Network Security Fundamentals: VPNs, Firewalls & IDS",IT & Software,Security,"Understand the key components of network security and how firewalls, VPNs, and IDS work.","Network security architecture, firewall rules, VPN tunneling, IDS/IPS, encryption.","Network Security, VPNs, Firewalls, IDS, Encryption.",Intermediate
Quantum Cryptography: Future of Encryption,IT & Software,Advanced Cryptography,Learn about quantum computing’s impact on modern encryption techniques.,"Quantum key distribution (QKD), Shor’s algorithm, post-quantum cryptography.","Quantum Cryptography, QKD, Post-Quantum Encryption.",Intermediate
Cryptographic Attacks: How Hackers Break Encryption,IT & Software,Ethical Hacking,Learn how to identify and mitigate cryptographic vulnerabilities in security systems.,"Man-in-the-Middle attacks, side-channel attacks, padding oracle attacks","Cryptanalysis, Cryptographic Attacks, Cybersecurity, Encryption Flaws.",Intermediate
AWS Certified Solutions Architect – Associate 2024,IT & Software,Cloud Computing,"Comprehensive guide to AWS architecture, services, and best practices for the certification exam.","AWS EC2, S3, VPC, RDS, IAM, Lambda, Auto Scaling.","AWS, Cloud, Architect, Certification, EC2, S3.",Intermediate
AWS Certified DevOps Engineer – Professional,IT & Software,DevOps & Cloud,"Learn AWS automation, CI/CD pipelines, infrastructure as code, and security for DevOps.","AWS CodeDeploy, CodePipeline, CloudFormation, Elastic Beanstalk.","AWS, DevOps, CI/CD, CloudFormation, CodeDeploy.",Intermediate
AWS Lambda & Serverless Applications,IT & Software,Cloud Computing,Learn how to build and deploy serverless applications using AWS Lambda.,"AWS Lambda, API Gateway, DynamoDB, Step Functions."," AWS Lambda, Serverless, API Gateway, DynamoDB.",Intermediate
AZ-900: Microsoft Azure Fundamentals Certification,IT & Software,Cloud Computing,"Learn the core concepts of Azure cloud computing, pricing, and security.","Azure Virtual Machines, Blob Storage, Identity Management.","Azure, Cloud, Certification, Fundamentals.",Intermediate
Microsoft Azure Security Technologies (AZ-500),IT & Software,Security & Cloud Computing,"Learn how to secure Azure workloads, implement compliance policies, and manage threats.","Azure Security Center, Defender for Cloud, Azure Sentinel, Encryption.","Azure Security, Compliance, Encryption, IAM, Defender.",Intermediate
Microsoft Azure AI & Machine Learning (AI-102),IT & Software,AI & Machine Learning,Learn how to build AI-driven applications using Azure AI and ML services.,"Azure ML Studio, Cognitive Services, Chatbots, AI APIs.","Azure AI, ML, Cognitive Services, Chatbots.",Intermediate
Google Cloud Data Engineering & BigQuery,IT & Software,Data Science & Cloud,"Master data processing, ETL, and analytics using Google Cloud’s BigQuery.","BigQuery, Dataflow, Dataproc, Cloud Storage, Data Lakes.","GCP, BigQuery, Data Engineering, ETL, Cloud Storage.",Intermediate
Virtualization Essentials with VMware & VirtualBox,IT & Software,Virtualization,"Introduction to virtualization concepts, VMware ESXi, and VirtualBox.","VMware vSphere, VirtualBox, Hypervisors, Networking.","Virtualization, VMware, VirtualBox, Hypervisor.",Intermediate
Docker Mastery: With Kubernetes & Swarm from a Docker Captain,IT & Software,DevOps & Cloud,"Master Docker, Docker Compose, Docker Swarm, and Kubernetes.","Docker CLI, Swarm Mode, Kubernetes Basics, CI/CD.","Docker, Containers, DevOps, Kubernetes, CI/CD.",Intermediate
Introduction to Cloud Security,IT & Software,Cybersecurity & Cloud Computing,"Learn the fundamentals of cloud security, including data protection, compliance, and risk management.","Cloud security fundamentals, risk assessment, compliance, security best practices.","Cloud security, compliance, risk management, cybersecurity.",Beginner
Deep Learning A-Z™: Hands-On Artificial Neural Networks,Data Science,Deep Learning,"Covers artificial neural networks, convolutional neural networks (CNNs), and recurrent neural networks (RNNs) using Python.","ANN, CNN, RNN, TensorFlow, Keras, Python.","deep learning, AI, Python, TensorFlow, Keras.",Intermediate
Python for Deep Learning & Machine Learning with TensorFlow,Data Science,Artificial Intelligence,"Learn deep learning from scratch using Python, TensorFlow, and Keras.","Neural networks, TensorFlow, Python, AI applications.","Python, deep learning, AI, neural networks, TensorFlow.",Advanced
Explainable AI (XAI) in Deep Learning,Data Science,AI & Ethics,Learn how to make deep learning models interpretable.,"Model interpretability, SHAP, LIME, AI transparency.","XAI, AI ethics, deep learning, model interpretability, fairness.",Intermediate
Deep Reinforcement Learning with Python,Data Science,AI & Machine Learning,Learn reinforcement learning using deep learning techniques.,"Q-learning, deep Q-networks, AI decision-making.","reinforcement learning, deep learning, AI, Q-learning, RL.",Intermediate
Generative Adversarial Networks (GANs) for Beginners,Data Science,Deep Learning,Build GAN models from scratch for image synthesis and AI creativity.,"GANs, deepfake generation, AI image synthesis.","GANs, deep learning, AI, image synthesis, deepfake.",Beginner
Deep Learning with TensorFlow 2.0,IT & Software,Artificial Intelligence,Explore TensorFlow 2.0 for deep learning model building.,"TensorFlow 2.0, Keras, model optimization, neural networks.","deep learning, TensorFlow, AI, neural networks, Keras.",Intermediate
Recurrent Neural Networks (RNN) – From Scratch,Data Science,Natural Language Processing (NLP),"Implement RNNs, LSTMs, and GRUs for sequence modeling and NLP.","RNN, LSTM, GRU, NLP, text generation.","deep learning, NLP, RNN, LSTM, sequence modeling.",Advanced
Natural Language Processing (NLP) with Python,Data Science,Natural Language Processing (NLP),Covers fundamental NLP techniques using Python and libraries like NLTK and spaCy.,"Tokenization, stemming, lemmatization, POS tagging.","NLP, Python, text processing, machine learning.",Advanced
Computer Vision for Beginners with OpenCV & Python,Data Science,Computer Vision,Covers the basics of Computer Vision using OpenCV and Python.,"Image processing, feature detection, object recognition.","computer vision, image processing, OpenCV, Python.",Beginner
Introduction to Computer Vision with Deep Learning,Data Science,Computer Vision,Beginner-friendly introduction to deep learning for Computer Vision applications.,"Neural networks, convolutional neural networks (CNNs), feature extraction.","deep learning, CNN, AI, image classification.",Beginner
Introduction to Reinforcement Learning with Python,Data Science,Reinforcement Learning,Covers the fundamentals of Reinforcement Learning (RL) with Python.,"Markov Decision Processes (MDP), Bellman Equations, Dynamic Programming.","reinforcement learning, AI, machine learning, MDP.",Intermediate
Data Analytics for Beginners: A Hands-On Approach,Data Science,Data Analytics,"Learn data analysis fundamentals using Python, Excel, and SQL.","Data cleaning, exploratory data analysis (EDA), basic statistics.","data analytics, beginner, Python, SQL, Excel.",Beginner
Excel for Data Analytics and Business Intelligence,Business & Finance,Data Analytics,Covers advanced Excel functions for data analysis and visualization.,"Pivot tables, VLOOKUP, Power Query, dashboard creation.","Excel, business intelligence, data visualization, analytics.",Intermediate
Python for Data Analysis & Visualization,Data Science,Data Analysis,Use Python libraries like Pandas and Matplotlib for data analytics.,"Pandas, NumPy, Matplotlib, Seaborn, data wrangling.","Python, data analysis, Pandas, visualization.",Advanced
Data Science and Machine Learning for Data Analytics,Data Science,Machine Learning,Learn machine learning techniques for data analysis.,"Regression, classification, clustering, feature engineering.","machine learning, data analytics, AI, Python.",Intermediate
Predictive Analytics and Data Mining with Python,Data Science,Predictive Analytics,"Covers predictive modeling, data mining, and machine learning.","Data preprocessing, classification, clustering, feature selection.","predictive analytics, data mining, Python, AI.",Intermediate
Data Engineering & ETL for Data Analytics,Data Science,Data Engineering,Learn data engineering concepts for data processing and pipeline creation.,"ETL pipelines, Apache Airflow, SQL, big data.","data engineering, ETL, big data, SQL.",Intermediate
AI-Powered Analytics with Python & TensorFlow,Data Science,AI & Machine Learning,Use AI techniques to automate data analytics.,"AI-based data processing, automation, TensorFlow.","AI analytics, automation, TensorFlow, deep learning.",Intermediate
The Ultimate Hands-On Hadoop - Tame Big Data with Hadoop & Spark,Data Science,Big Data Frameworks,A practical guide to working with Hadoop and Spark for big data processing.,"HDFS, MapReduce, Apache Spark, YARN, Hive, Pig.","Hadoop, Spark, big data, HDFS, MapReduce, YARN.",Intermediate
"Big Data for Beginners - Hadoop, Spark & Data Engineering Basics",Data Science,Big Data,A beginner-friendly introduction to big data concepts and frameworks.,"HDFS basics, Hadoop ecosystem, Spark fundamentals.","big data, Hadoop, Spark, NoSQL, data processing.",Beginner
Big Data Hadoop Administration: Learn Big Data Technologies,IT & Software,Hadoop Administration,"A step-by-step guide to installing, configuring, and managing a Hadoop cluster.","Cluster setup, YARN, HDFS configuration, monitoring tools.","Hadoop admin, YARN, big data cluster management, IT operations.",Intermediate
Apache Hadoop & Spark for Financial Data Analysis,Finance & Analytics,Big Data for Finance,Learn how big data frameworks are applied in financial analytics.,"Risk modeling, fraud detection, predictive analytics.","financial analytics, big data, fraud detection, Spark.",Intermediate
Tableau for Beginners: Get Certified and Learn Data Visualization,Data Science,Data Visualization,A complete beginner-friendly guide to mastering Tableau.,"Tableau basics, dashboard building, data storytelling.","Tableau, dashboards, data storytelling, visualization.",Beginner
Introduction to Power BI for Data Analysis and Business Intelligence,Business Intelligence,Power BI,A hands-on Power BI course focusing on business insights.,"Power BI reports, data modeling, interactive dashboards.","Power BI, dashboards, data insights, business intelligence.",Beginner
Power BI for Data Scientists - Masterclass with Python & R,Data Science,Power BI,Learn how to integrate Python and R with Power BI for advanced analytics.,"Power BI scripting, Python data visualization, R analytics.","Power BI, Python, R, advanced analytics.",Advanced
AI-Powered Data Visualization with Tableau & Power BI,Data Science,AI in Data Visualization,Use AI and ML models to enhance data visualization in Tableau and Power BI.,"AI-powered insights, machine learning integration, predictive analytics.","AI, machine learning, Power BI, Tableau, predictive analytics.",Intermediate
"The Complete Web Developer Bootcamp (HTML, CSS, JavaScript)",Web Development,Frontend Development,"Covers the basics of frontend development, including HTML, CSS, and JavaScript.","HTML5, CSS3, JavaScript fundamentals, responsive design.","Web development, frontend, HTML, CSS, JavaScript.",Intermediate
JavaScript Algorithms & Data Structures – The Complete Guide,Web Development,JavaScript,"Covers JavaScript algorithms, data structures, and problem-solving techniques.","Data structures, recursion, sorting algorithms.","JavaScript, DSA, problem-solving.",Intermediate
"Build Responsive Websites with HTML, CSS, and Bootstrap",Web Development,UI/UX Design,Learn how to create mobile-friendly websites using Bootstrap.,"HTML, CSS, Bootstrap 5, responsive design.","HTML, CSS, Bootstrap, mobile-friendly.",Intermediate
"The Complete Node.js Developer Course (MVC, Express, MongoDB)",Web Development,Backend Development,Covers the fundamentals of backend development using Node.js and Express.,"Node.js, Express.js, MongoDB, REST APIs, authentication.","Node.js, Express, backend, APIs.",Intermediate
Python Django for Beginners: Build a Full-Stack Website,Web Development,Django,Learn Django framework from scratch and build web applications.,"Django models, views, templates, PostgreSQL.","Django, Python, backend, web applications.",Beginner
Mastering Flask: Building Web Applications with Python,Web Development,Flask,"Learn Flask, SQLAlchemy, and authentication for backend applications.","Flask, ORM, RESTful APIs, authentication.","Flask, web development, authentication, databases.",Intermediate
"The Complete Web Developer Course: HTML, CSS, JavaScript, React & Node.js",Web Development,Full-Stack Development,"Learn full-stack development from scratch, covering front-end and back-end.","HTML, CSS, JavaScript, React, Node.js, Express.js, MongoDB.","Full-stack, MERN, frontend, backend, databases.",Intermediate
"Full-Stack Development with MEAN (MongoDB, Express, Angular, Node.js)",Web Development,MEAN Stack,Covers Angular for frontend and Node.js for backend with MongoDB.,"Angular, MongoDB, Express.js, Node.js, JWT authentication.","MEAN stack, Angular, REST APIs, full-stack development.",Intermediate
Full-Stack Machine Learning Web App with Flask & React,Web Development,AI & Full-Stack,Learn to integrate machine learning models into a full-stack web app.,"Flask, React, TensorFlow, data visualization.","AI, Flask, React, full-stack ML.",Intermediate
CI/CD with Jenkins: Automate Software Delivery,DevOps & Automation,Jenkins,"Learn to set up and manage CI/CD pipelines using Jenkins, from installation to deployment.","Integration with Git, Docker, and Kubernetes,Automated testing & deployment","Jenkins, CI/CD, DevOps, automation",Intermediate
Data Structures and Algorithms in Python – The Complete Bootcamp,Development,Programming Languages,A complete hands-on guide to implementing and understanding data structures and algorithms using Python.,"Arrays, Linked Lists, Stacks, Queues, Trees, Graphs, Sorting, Searching, Recursion,python","Python, Data Structures, Algorithms, DSA, Recursion",Intermediate
